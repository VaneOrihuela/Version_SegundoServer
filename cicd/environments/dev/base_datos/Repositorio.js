const conexion = require('./conexion');
const oracledb = require('oracledb');

const Repositorio = {
     // Función para verificar si la conexión está abierta
  verificarConexion: async (connection) => {
    try {
      // Realizamos una consulta sencilla para verificar si la conexión está activa
      await connection.execute('SELECT 1 FROM DUAL');
      return true; // Si la consulta pasa, la conexión está activa
    } catch (error) {
      console.error("La conexión está cerrada o no es válida:", error);
      return false; // Si ocurre un error, la conexión no es válida
    }
  },
  obtenerConexion: async () => {
    let connection = await conexion.conexion();  // Intentamos obtener la conexión

    const isConnectionActive = await Repositorio.verificarConexion(connection);
    
    // Si la conexión no está activa, la reabrimos
    if (!isConnectionActive) {
      console.log("Conexión cerrada. Intentando abrir una nueva...");
      connection = await conexion.conexion();
    }

    return connection;
  },
  // Función para obtener transacciones con los parámetros proporcionados
  obtenerTransacciones: async () => {
    let connection;
    try {
        connection = await Repositorio.obtenerConexion();

      const isConnectionActive = await Repositorio.verificarConexion(connection);
      if (!isConnectionActive) {
        throw new Error('La conexión no está activa o se cerró');
      }
      // Query para obtener las transacciones basadas en los filtros ORDER BY TRAN_DAT DESC
      const query = `
     SELECT 
    '240821' AS FECHA_TRASC,
    'L0039025'  AS TIENDA_TERM,  
    '0000003300000148' AS NUM_TARJETA,  
    '0000009683' AS BOLETA,  

FROM DUAL
UNION ALL
SELECT 
    '240821' AS FECHA_TRASC,  
    'L0039024'  AS TIENDA_TERM,  
    '0000003300000147' AS NUM_TARJETA,  
    '0000009683' AS BOLETA,  

FROM DUAL
UNION ALL
SELECT 
    '240821' AS FECHA_TRASC,  
    'L0390099'  AS TIENDA_TERM,  
    '0000003300000147' AS NUM_TARJETA,  
    '0000009683' AS BOLETA,  

FROM DUAL
UNION ALL
SELECT 
    '240821' AS FECHA_TRASC,  
    'L0390099'  AS TIENDA_TERM,  
    '0000003300000147' AS NUM_TARJETA,  
    '0000009683' AS BOLETA,  
    '2620000D018C212051320002303321204330001A202020202020202020202020202020202020372020302020202021204334000C30303135313030303036303021204648001420202020202020202020202020343834202020202120434800242020000000000000000020202020202020202020202020202031202020202020202020202120323800583335313030303030303030303030303030303030303030303030303030383030303030383437303030303030303030393030303030303030303030303533303030303332303731313030303030303433313231363131505921203332000C31313230303030303030414121205052000A3031313030203030303021205037001002F354415280B8A902F354415280B8DF21204238002220202020202020202020202020202020504F5320202020202020202020202020202021204239003C20202020202020202020202020202020202020202020202020202020202049534F3030333030302020202020202020202020202020202020202020202120513100023020' AS TOKEN_DATA  -- TOKEN_DATA es LONG, lo convertimos a VARCHAR2(4000)
FROM DUAL
UNION ALL
SELECT 
    '240821' AS FECHA_TRASC,  
    'L0390099'  AS TIENDA_TERM,  
    '0000003300000147' AS NUM_TARJETA,  
    '0000009683' AS BOLETA,  

FROM DUAL
UNION ALL
SELECT 
    '240821' AS FECHA_TRASC,  
    'L0390099'  AS TIENDA_TERM,  
    '0000003300000147' AS NUM_TARJETA,  
    '0000009683' AS BOLETA, 

FROM DUAL
      `;

      if (connection && connection.isClosed) {
        console.log('La conexión estaba cerrada, abriéndola de nuevo...');
        connection = await conexion.conexion();  // Reabrimos la conexión
      }
      // Ejecutar la consulta con los parámetros proporcionados
      const resultado = await connection.execute(query, [], { outFormat: oracledb.OUT_FORMAT_OBJECT });     
      // Retornamos todas las filas en un array
      return resultado.rows.map(row => ({
        FECHA_TRASC: row.FECHA_TRASC,
        TIENDA_TERM: row.TIENDA_TERM,
        NUM_TARJETA: row.NUM_TARJETA,
        BOLETA: row.BOLETA,
        TOKEN_DATA: row.TOKEN_DATA
      }));
    } catch (error) {
      console.error("Error al obtener transacciones:", error);
      throw error;
    } finally {
      if (connection) {
        try {
          await connection.close(); // Aseguramos cerrar la conexión después de la consulta
        } catch (err) {
          console.error("Error al cerrar la conexión:", err);
        }
      }
    }
  },

  GuardarTransacciones: async (xml) => {
    let connection;
    try {
        connection = await Repositorio.obtenerConexion();

      const isConnectionActive = await Repositorio.verificarConexion(connection);
      if (!isConnectionActive) {
        throw new Error('La conexión no está activa o se cerró');
      }
      // Query para obtener las transacciones basadas en los filtros ORDER BY TRAN_DAT DESC
      const query = `    
    INSERT INTO INFO_TOKEN (
    KQ2_ID_MEDIO_ACCESO,
    KQN_FLAG,
    KCH_RESP_SRC_RSN_CDE,
    KRJ_VERSION_3DS,
    KC0_IND_ECOM,
    KC0_CVV2,
    KC4_NIV_SEG,
    KC0_RESULTADO_VALIDACION_CAVV,
    KC4_ID_IND,
    KFH_ECOMM_3D_SECURE_IND,
    KFH_CAV_TYP,
    FECHA_TRANSACCION,
    TIENDA_TERMINAL,
    NUMERO_TARJETA,
    BOLETA,
    TIPO
)
SELECT    
    registro.KQ2_ID_MEDIO_ACCESO,
    registro.KQN_FLAG,
    registro.KCH_RESP_SRC_RSN_CDE,
    registro.KRJ_VERSION_3DS,
    registro.KC0_IND_ECOM,
    registro.KC0_CVV2,
    registro.KC4_NIV_SEG,
    registro.KC0_RESULTADO_VALIDACION_CAVV,
    registro.KC4_ID_IND,
    registro.KFH_ECOMM_3D_SECURE_IND,
    registro.KFH_CAV_TYP,
    registro.FECHA_TRASC,
    registro.TIENDA_TERM,
    registro.NUM_TARJETA,
    registro.BOLETA,
    '0' 
FROM
    XMLTABLE(
        '/Registros/Registro' 
        PASSING xmltype(:xml)
        COLUMNS
            KQ2_ID_MEDIO_ACCESO VARCHAR2(2) PATH 'KQ2_ID_MEDIO_ACCESO',
            KQN_FLAG VARCHAR2(2) PATH 'KQN_FLAG',
            KCH_RESP_SRC_RSN_CDE VARCHAR2(2) PATH 'KCH_RESP_SRC_RSN_CDE',
            KRJ_VERSION_3DS VARCHAR2(2) PATH 'KRJ_VERSION_3DS',
            KC0_IND_ECOM VARCHAR2(2) PATH 'KC0_IND_ECOM',
            KC0_CVV2 VARCHAR2(4) PATH 'KC0_CVV2',
            KC4_NIV_SEG VARCHAR2(1) PATH 'KC4_NIV_SEG',
            KC0_RESULTADO_VALIDACION_CAVV VARCHAR2(1) PATH 'KC0_RESULTADO_VALIDACION_CAVV',
            KC4_ID_IND VARCHAR2(1) PATH 'KC4_ID_IND',
            KFH_ECOMM_3D_SECURE_IND VARCHAR2(2) PATH 'KFH_ECOMM_3D_SECURE_IND',
            KFH_CAV_TYP VARCHAR2(2) PATH 'KFH_CAV_TYP',
            FECHA_TRASC VARCHAR2(20) PATH 'FECHA_TRASC',
            TIENDA_TERM VARCHAR2(20) PATH 'TIENDA_TERM',
            NUM_TARJETA VARCHAR2(20) PATH 'NUM_TARJETA',
            BOLETA VARCHAR2(20) PATH 'BOLETA'
    ) registro    
      `;

      if (connection && connection.isClosed) {
        console.log('La conexión estaba cerrada, abriéndola de nuevo...');
        connection = await conexion.conexion();  // Reabrimos la conexión
      }
      // Ejecutar la consulta con los parámetros proporcionados
      const resultado = await connection.execute(query, [xml], { outFormat: oracledb.OUT_FORMAT_OBJECT });
      await connection.commit();   
      console.log(`Número de filas insertadas: ${resultado.rowsAffected}`);
      return resultado.rowsAffected;
    } catch (error) {
      console.error("Error al obtener transacciones:", error);
      throw error;
    } finally {
      if (connection) {
        try {
          await connection.close(); // Aseguramos cerrar la conexión después de la consulta
        } catch (err) {
          console.error("Error al cerrar la conexión:", err);
        }
      }
    }
  },

};

module.exports = Repositorio;
